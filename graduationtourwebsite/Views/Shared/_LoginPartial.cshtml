@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
    {
        @if(UserManager.GetUserAsync(User).Result.profilepicture!=null)
        {
          <li class="nav-item">
              <img style="height:40px; width:40px; object-fit:cover; " class="rounded-circle" alt="profile" src="data:image/*;base64,@(Convert.ToBase64String(UserManager.GetUserAsync(User).Result.profilepicture))" />
            </li>  
        }
        <li class="nav-item">
                <a  class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Welcome  @User.Identity.Name</a>
            </li>
            <li class="nav-item">
                <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
                </form>
            </li>
      
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login" name="LOGIN">Login</a>
        </li>
    }
</ul>
